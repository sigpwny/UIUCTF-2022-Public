apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: CHALLENGE_NAME-instancer
  namespace: default
  labels:
    app: CHALLENGE_NAME-instancer
spec:
  defaultBackend:
    service:
      name: instancer
      port:
        number: 1337
  rules:
    - host: CHALLENGE_NAME.chal.uiuc.tf
  tls:
    - secretName: tls-cert-instancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: CHALLENGE_NAME-hostproxy
  namespace: default
  labels:
    app: CHALLENGE_NAME-hostproxy
spec:
  defaultBackend:
    service:
      name: hostproxy
      port:
        number: 80
  rules:
    - host: '*.CHALLENGE_NAME.chal.uiuc.tf'
  tls:
    - secretName: tls-cert-CHALLENGE_NAME
---
apiVersion: v1
kind: Namespace
metadata:
  name: CHALLENGE_NAME-managed
  labels:
    name: CHALLENGE_NAME-managed
    uiuctf-namespace: instancer-managed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: CHALLENGE_NAME-manager-role
  namespace: CHALLENGE_NAME-managed
rules:
  - apiGroups: ["*"]
    resources:
      - jobs
      - pods
      - services
      - ingresses
    verbs:
      - create
      - update
      - patch
      - delete
      - get
      - watch
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: CHALLENGE_NAME-manager
  namespace: CHALLENGE_NAME-managed
subjects:
  - kind: ServiceAccount
    name: instancer-manager
    namespace: default
roleRef:
  kind: Role
  name: CHALLENGE_NAME-manager-role
  apiGroup: rbac.authorization.k8s.io
